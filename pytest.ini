[tool:pytest]
# Pytest configuration for bio-hit-finder comprehensive test suite

# Minimum pytest version
minversion = 7.0

# Test discovery paths
testpaths = tests

# Add options to command line
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --cov=core
    --cov=analytics  
    --cov=visualizations
    --cov=export
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    -ra

# Test markers
markers =
    unit: Unit tests for individual functions and classes
    integration: Integration tests for end-to-end workflows  
    golden: Golden reference tests with known expected values
    performance: Performance and benchmark tests
    slow: Slow-running tests that may be skipped in quick runs
    visualization: Tests for chart and plot generation
    export: Tests for data export functionality
    ui: UI and user interface tests
    requires_browser: Tests that require browser automation
    requires_network: Tests that require network access

# Python files to consider as tests
python_files = test_*.py *_test.py

# Python classes to consider as test classes  
python_classes = Test*

# Python functions to consider as test functions
python_functions = test_*

# Ignore paths
norecursedirs = 
    .git
    .tox
    .env
    dist
    build
    *.egg
    htmlcov
    .pytest_cache
    __pycache__

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:plotly.*
    ignore::PendingDeprecationWarning
    ignore::RuntimeWarning:numpy.*
    error::UserWarning:bio_hit_finder.*

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test timeouts (in seconds)
timeout = 300
timeout_method = thread

# Collection configuration
collect_ignore = [
    "setup.py",
    "conftest.py",
]

# Doctest configuration
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

# Custom test markers and their descriptions
# Unit tests: Fast, isolated tests for individual functions
# Integration tests: Test interactions between components
# Golden tests: Tests with reference data and exact numerical validation
# Performance tests: Benchmark tests against PRD requirements
# Slow tests: Tests that take significant time (can be skipped)
# Visualization tests: Tests for plotting and chart generation  
# Export tests: Tests for CSV, PDF, and ZIP export functionality