[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bio-hit-finder"
version = "0.1.0"
description = "Plate data processing and analysis platform for biological research"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Bio Hit Finder Team" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
requires-python = ">=3.11"
dependencies = [
    # Core data processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    
    # Web application framework
    "streamlit>=1.28.0",
    
    # Visualization
    "plotly>=5.15.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    
    # File I/O and Excel support
    "openpyxl>=3.1.0",
    "xlsxwriter>=3.1.0",
    
    # PDF generation and templating
    "jinja2>=3.1.0",
    "weasyprint>=60.0",
    "kaleido>=0.2.1",
    
    # Configuration and utilities
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    
    # Type hints and validation
    "typing-extensions>=4.7.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
# Alternative high-performance backend
polars = [
    "polars>=0.20.0",
]

# Cloud storage support
cloud = [
    "boto3>=1.28.0",  # AWS S3
    "google-cloud-storage>=2.10.0",  # Google Cloud Storage
    "azure-storage-blob>=12.17.0",  # Azure Blob Storage
]

# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",  # Parallel test execution
    "ruff>=0.1.0",  # Linting and formatting
    "mypy>=1.5.0",  # Type checking
    "black>=23.0.0",  # Code formatting (fallback)
    "isort>=5.12.0",  # Import sorting
    "pre-commit>=3.4.0",  # Git hooks
]

# Testing with performance benchmarks
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.82.0",  # Property-based testing
]

# Documentation generation
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

# UI testing
ui-test = [
    "playwright>=1.40.0",
    "selenium>=4.15.0",
]

[project.urls]
Homepage = "https://github.com/bio-hit-finder/bio-hit-finder"
Repository = "https://github.com/bio-hit-finder/bio-hit-finder.git"
Documentation = "https://bio-hit-finder.readthedocs.io"
"Bug Tracker" = "https://github.com/bio-hit-finder/bio-hit-finder/issues"

[project.scripts]
bio-hit-finder = "bio_hit_finder.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["core", "analytics", "visualizations", "export", "templates", "assets", "tests", "data"]

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "W", "C90", "I", "N", "D", "UP", "YTT", "ANN", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "ANN101",  # Missing type annotation for self in method
    "ANN102",  # Missing type annotation for cls in classmethod
    "S101",  # Use of assert detected (pytest uses assert)
    "PLR0913",  # Too many arguments to function call
    "PLR2004",  # Magic value used in comparison
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11.
target-version = "py311"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
# Tests can use magic values and assertions
"tests/**/*.py" = ["PLR2004", "S101", "ANN201"]
# CLI modules can have complex argument parsing
"**/cli.py" = ["PLR0913", "PLR0912"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Per-module options
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "plotly.*",
    "weasyprint.*",
    "kaleido.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "ui: marks tests as UI tests requiring browser",
    "golden: marks tests that compare against reference data",
]

[tool.coverage.run]
source = ["core", "analytics", "visualizations", "export"]
omit = [
    "tests/*",
    "*/conftest.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88